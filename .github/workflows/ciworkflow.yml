name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest

      - name: Lint
        run: |
          source venv/bin/activate
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics --exclude=venv,.venv,__pycache__

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest tests/ --disable-warnings --maxfail=3 --junitxml=results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: results.xml

  docker:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USER }}/my-python-app
          docker build -t $IMAGE_NAME:${{ github.run_number }} .
          docker tag $IMAGE_NAME:${{ github.run_number }} $IMAGE_NAME:latest

      - name: Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USER }}/my-python-app
          docker push $IMAGE_NAME:${{ github.run_number }}
          docker push $IMAGE_NAME:latest
